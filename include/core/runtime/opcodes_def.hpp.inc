OPCODE(nop)
OPCODE(new_instance)
OPCODE(invoke_method)

/* ldc: constant to stack */
OPCODE(ldc_null)
TYPED_OPCODES_PREFIX(ldc)

/* pop: drop stack top */
OPCODE(pop)

/* ld: register to stack */
TYPED_OPCODES_PREFIX(ld)
OPCODE(ld_object)

/* st: stack to register */
TYPED_OPCODES_PREFIX(st)
OPCODE(st_object)

TYPED_OPCODES_PREFIX(add)
TYPED_OPCODES_PREFIX(sub)
TYPED_OPCODES_PREFIX(mul)
TYPED_OPCODES_PREFIX(div)
TYPED_OPCODES_PREFIX(remain)
TYPED_OPCODES_PREFIX(neg)

INTS_OPCODES_PREFIX(shl)
INTS_OPCODES_PREFIX(shr)
INTS_OPCODES_PREFIX(ushl)
INTS_OPCODES_PREFIX(ushr)
INTS_OPCODES_PREFIX(and)
INTS_OPCODES_PREFIX(or)
INTS_OPCODES_PREFIX(xor)

TYPED_OPCODES_PREFIX(i32_to)
TYPED_OPCODES_PREFIX(i64_to)
TYPED_OPCODES_PREFIX(f32_to)
TYPED_OPCODES_PREFIX(f64_to)

OPCODE(ret)
OPCODE(ret_object)
TYPED_OPCODES_PREFIX(ret)

OPCODE(jump)
OPCODE(jump_ret)
OPCODE(jump_eq)
OPCODE(jump_ne)
OPCODE(jump_gt)
OPCODE(jump_ge)
OPCODE(jump_lt)
OPCODE(jump_le)
OPCODE(jump_not_null)

INTS_OPCODES_PREFIX(jump_eq)
INTS_OPCODES_PREFIX(jump_ne)
INTS_OPCODES_PREFIX(jump_gt)
INTS_OPCODES_PREFIX(jump_ge)
INTS_OPCODES_PREFIX(jump_lt)
INTS_OPCODES_PREFIX(jump_le)
OPCODE(jump_eq_object)
OPCODE(jump_ne_object)

INTS_OPCODES_PREFIX(cmp)
FLOATS_OPCODES_PREFIX(cmp_lt)
FLOATS_OPCODES_PREFIX(cmp_gt)

